{
    "$id": "http://blueyonder.com/bydm/location",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "AdditionalPartyIdentificationType": {
            "additionalProperties": false,
            "properties": {
                "typeCode": {
                    "description": "Identification of a party by use of a code in addition to the Global Location Number.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "A party identifier that is in addition to the GLN.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "AdditionalPartyIdentificationTypeCode": {
            "type": "string"
        },
        "AllowDropOffEnumerationType": {
            "enum": [
                "D_NULL",
                "D_ALLOWED",
                "D_CONDITIONAL",
                "D_NOT_ALLOWED"
            ],
            "type": "string"
        },
        "AllowPickUpEnumerationType": {
            "enum": [
                "P_NULL",
                "P_ALLOWED",
                "P_CONDITIONAL",
                "P_NOT_ALLOWED"
            ],
            "type": "string"
        },
        "AncestryType": {
            "additionalProperties": false,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "hierarchyId": {
                    "description": "The hierarchy to which the ancestry member belongs. If not passed, the value will default to the hierarchyIdentifier assigned to the member.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "hierarchyLevelId": {
                    "description": "The hierarchy level identifier to which the ancestry member belongs.  If none provided, the sequence of ancestry occurrences determines the level. For example, the first occurrence of ancestry would represent the immediate ancestor.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "memberId": {
                    "description": "The set of characters that uniquely references a member of a hierarchy.",
                    "type": "string"
                },
                "memberName": {
                    "description": "The term by which the member is commonly known by the business.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "memberId"
            ],
            "type": "object"
        },
        "AssociatedShipFromType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "allLocations": {
                    "description": "Location can ship to / ship from all locations.",
                    "type": "boolean"
                },
                "isManagedByTransportation": {
                    "description": "Location is managed by transportation system.",
                    "type": "boolean"
                },
                "shipFrom": {
                    "description": "Basic location receives from these locations.",
                    "items": {
                        "$ref": "#/definitions/ShipFromType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AssociatedShipToType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "allLocations": {
                    "description": "Location can ship to / ship from all locations.",
                    "type": "boolean"
                },
                "isManagedByTransportation": {
                    "description": "Location is managed by transportation system.",
                    "type": "boolean"
                },
                "shipTo": {
                    "description": "Basic location shipping to these locations.",
                    "items": {
                        "$ref": "#/definitions/ShipToType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BasicLocationType": {
            "additionalProperties": false,
            "dependencies": {
                "avpList": {
                    "not": {
                        "required": [
                            "extensions"
                        ]
                    }
                },
                "extensions": {
                    "not": {
                        "required": [
                            "avpList"
                        ]
                    }
                }
            },
            "nullable": true,
            "properties": {
                "accountGroup": {
                    "description": "CustomerAccountGroup.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "additionalPartyId": {
                    "description": "Identifier of the party or location, specified in addition to the GLN.",
                    "items": {
                        "$ref": "#/definitions/AdditionalPartyIdentificationType"
                    },
                    "type": "array"
                },
                "address": {
                    "$ref": "#/definitions/LocationAddressType"
                },
                "avpList": {
                    "description": "Deprecated, use 'extensions' instead. The placeholder for non-standard data.",
                    "items": {
                        "$ref": "#/definitions/EcomStringAttributeValuePairListType"
                    },
                    "type": "array"
                },
                "banner": {
                    "description": "The term for a subsidiary used by an enterprise.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "contact": {
                    "description": "Information on an individual or department acting as point of contact for an organization.",
                    "items": {
                        "$ref": "#/definitions/LocationContactType"
                    },
                    "type": "array"
                },
                "deliveryPostalCode": {
                    "description": "The postal code to which the orders from this location can be delivered.",
                    "items": {
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "description": {
                    "$ref": "#/definitions/DescriptionType"
                },
                "extensions": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "isCrossDock": {
                    "description": "This attribute will define if Location is Cross Dock also.",
                    "type": "boolean"
                },
                "isResidentialAddress": {
                    "description": "Indicates whether the address is a residential address. If omitted from input, false will be assumed.",
                    "type": "boolean"
                },
                "isTemporaryAddress": {
                    "description": "Indicates that a an address is intended for limited use, and not for long-term management by the system.",
                    "type": "boolean"
                },
                "locationName": {
                    "description": "The user friendly name of the location.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "locationSubType": {
                    "description": "A further classification of a location type.  For example a location type of \"PORT\" could be designated as an Airport or Seaport.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "locationTypeCode": {
                    "description": "Physical type of location, such as warehouse or store.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "operatingHours": {
                    "$ref": "#/definitions/OperatingHours"
                },
                "organisationName": {
                    "description": "The official name of the organisation.\n\n\n",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "shipFromLocations": {
                    "$ref": "#/definitions/AssociatedShipFromType"
                },
                "shipToLocations": {
                    "$ref": "#/definitions/AssociatedShipToType"
                },
                "status": {
                    "description": "Information about when a location is active/inactive.",
                    "items": {
                        "$ref": "#/definitions/LocationStatusType"
                    },
                    "type": "array"
                },
                "sublocationId": {
                    "description": "Text further specifying the exact logistic location. For example: dock door, department, building.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "CommunicationChannelCode": {
            "type": "string"
        },
        "CommunicationChannelType": {
            "additionalProperties": false,
            "properties": {
                "communicationChannelCode": {
                    "description": "Code specifying the type of communication channel, for example TELEPHONE.",
                    "type": "string"
                },
                "communicationChannelName": {
                    "description": "The name of a specific communication channel for example Facebook, Twitter, etc.",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "communicationValue": {
                    "description": "Text identifying the endpoint for the communication channel, for example a telephone number or an e-mail address.",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "communicationChannelCode",
                "communicationValue"
            ],
            "type": "object"
        },
        "CompetitionType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "competitionName": {
                    "description": "Name of the competitor.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "distanceFromCompetition": {
                    "$ref": "#/definitions/MeasurementType"
                }
            },
            "type": "object"
        },
        "ConsignmentTrackingCode": {
            "type": "string"
        },
        "ContactTypeCode": {
            "type": "string"
        },
        "CountryCode": {
            "type": "string"
        },
        "CurrencyCode": {
            "type": "string"
        },
        "DayOfTheWeekEnumerationType": {
            "enum": [
                "FRIDAY",
                "MONDAY",
                "SATURDAY",
                "SUNDAY",
                "THURSDAY",
                "TUESDAY",
                "WEDNESDAY"
            ],
            "type": "string"
        },
        "DemurrageType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "containerType": {
                    "description": "A term representing the general business terminology that describes the shipping container.",
                    "maxLength": 128,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "demurrageChargeAmountPerDay": {
                    "description": "The amount that will be charged to the carrier by the port authority for holding the shipping container after the free hold period is exceeded.",
                    "type": "number"
                },
                "freeHoldDays": {
                    "description": "The maximum number of days a port authority allows the container to be held at the port before demurrage charges begin assessed.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Description80Type": {
            "additionalProperties": false,
            "properties": {
                "languageCode": {
                    "description": "A code representing the language used in the description.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "A string of no more than 80 characters in a specified language.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "DescriptionType": {
            "additionalProperties": false,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "descriptionType": {
                    "description": "Type of description, eg Long, Short, Mobile, etc.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "languageCode": {
                    "description": "The language of the description.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "The text of description.",
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "DespatchAdviceRestrictionCode": {
            "type": "string"
        },
        "DistributionCenterDetailsType": {
            "additionalProperties": false,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "billToCustomer": {
                    "description": "The party that will be responsible for any charges that are due as a result of services provided to the store.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "distributionCenterId": {
                    "description": "The set of characters that uniquely references the facility that provides replenishment services to the store location.",
                    "type": "string"
                },
                "ownerOfStore": {
                    "description": "The party responsible for the operation of the store.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "processingPriority": {
                    "description": "A number representing the relative importance of servicing this store in distribution operations.",
                    "type": "integer"
                },
                "routeSchedule": {
                    "$ref": "#/definitions/RouteScheduleType"
                },
                "routeToCustomer": {
                    "description": "The geographic location through which deliveries to this store should be transported.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "storeCategory": {
                    "description": "A term used by the business to identify the operational characteristics of the store.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "storeGroup": {
                    "description": "The term used by the business to refer to a specific collection of stores.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "storeStagingLocation": {
                    "$ref": "#/definitions/StoreStagingLocationType"
                }
            },
            "required": [
                "distributionCenterId"
            ],
            "type": "object"
        },
        "DocumentActionEnumerationType": {
            "enum": [
                "ADD",
                "CHANGE_BY_REFRESH",
                "DELETE",
                "PARTIAL_CHANGE",
                "CANCEL"
            ],
            "type": "string"
        },
        "DocumentStatusEnumerationType": {
            "enum": [
                "ADDITIONAL_TRANSMISSION",
                "COPY",
                "ORIGINAL"
            ],
            "type": "string"
        },
        "EcomStringAttributeValuePairListType": {
            "additionalProperties": false,
            "anyOf": [
                {
                    "required": [
                        "name",
                        "value"
                    ]
                },
                {
                    "required": [
                        "name",
                        "binaryValue"
                    ]
                },
                {
                    "required": [
                        "name",
                        "date"
                    ]
                },
                {
                    "required": [
                        "name",
                        "dateTime"
                    ]
                }
            ],
            "nullable": true,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "binaryValue": {
                    "format": "binary",
                    "type": "string"
                },
                "date": {
                    "format": "date",
                    "type": "string"
                },
                "dateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the temporary attribute being introduced as an attribute value pair.",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": "string"
                },
                "qualifierCodeList": {
                    "description": "The code list qualifying the temporary attribute",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifierCodeName": {
                    "description": "The value of the attribute qualifier associated with the codeListName",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "An attribute value pair that allows for a string and optionally an associated qualifier (e.g. Unit of Measure).",
                    "type": [
                        "string",
                        "number",
                        "boolean",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "ExtensionFieldWithQualifierType": {
            "additionalProperties": false,
            "properties": {
                "qualifierCodeList": {
                    "type": "string"
                },
                "qualifierCodeName": {
                    "type": "string"
                },
                "value": {
                    "type": [
                        "number",
                        "integer",
                        "string",
                        "boolean"
                    ]
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "ExtensionType": {
            "additionalProperties": {
                "oneOf": [
                    {
                        "type": [
                            "number",
                            "integer",
                            "string",
                            "boolean"
                        ]
                    },
                    {
                        "$ref": "#/definitions/ExtensionFieldWithQualifierType"
                    }
                ]
            },
            "type": "object"
        },
        "HeaderType": {
            "additionalProperties": false,
            "properties": {
                "creationDateAndTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "messageId": {
                    "type": "string"
                },
                "messageVersion": {
                    "description": "Message specific named version, for example 'BYDM 2020.2.0'.",
                    "type": "string"
                },
                "model": {
                    "description": "Model. Default value is 'BYDM'.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "receiver": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sender": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "testMessage": {
                    "description": "When value is 'true' then message is considered to be a test message. Check adapter documentation to see if it properly supports test messages",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "messageVersion",
                "messageId",
                "type",
                "creationDateAndTime"
            ],
            "type": "object"
        },
        "HierarchyInformationType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "ancestry": {
                    "description": "Information about the ancestry for this item. The requirement for ancestry content will vary based on the target applications in use, i.e., some applications require only the immediate ancestor, while other applications require the full ancestry to be sent for each member. If the full ancestry is required, ancestors must be loaded starting with the immediate ancestor and then in ascending order. If ancestors in more than one hierarchy need to be sent in the same document, all ancestors in one hierarchy should be sent before starting the ancestors in the next hierarchy.",
                    "items": {
                        "$ref": "#/definitions/AncestryType"
                    },
                    "type": "array"
                },
                "hierarchyId": {
                    "description": "The hierarchy the member belongs to. If not passed, the value will default to the dimension's primary hierarchy. For example, if the hierarchyIdentifier is not passed for a member in the Item or ItemHiearchyLevelMember message, the hierarchyIdentifier will default to the primary hierarchy in the ITEM dimension.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "hierarchyLevelId": {
                    "description": "The hierarchy level the member belongs to. If not passed, the value will default to the lowest Hierarchy Level.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "hierarchyLevelNumber": {
                    "description": "The hierarchy level number that the member belongs to. This element is not required.",
                    "type": "integer"
                },
                "memberName": {
                    "description": "The term by which the member is commonly known by the business.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "InventoryStatusCode": {
            "type": "string"
        },
        "LanguageCode": {
            "type": "string"
        },
        "LoadingCodeType": {
            "enum": [
                "LIVE_LOAD",
                "LOAD_ON_HOURS",
                "LOAD_OFF_HOURS"
            ],
            "type": "string"
        },
        "LoadingUnloadingTimeCalculationCodeType": {
            "enum": [
                "EQUIPMENT_OVERRIDES",
                "LOCATION_OVERRIDES",
                "DOCK_OVERRIDES",
                "MAXIMUM",
                "ACCUMULATE"
            ],
            "type": "string"
        },
        "LocationAddressType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "addressDescription": {
                    "description": "A description for this address.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "addressDistrict": {
                    "description": "The district of the address.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "addressRegion": {
                    "description": "The region of the address e.g., Northern Europe OR Northern California.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "addressSubregion": {
                    "description": "A subregion is a smaller, distinct part of a larger geographical region e.g., North-Western OR San Francisco Bay area.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "city": {
                    "description": "Text specifying the name of the city.",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "cityCode": {
                    "description": "Identifier for a city, expressed as a short code rather than the full name.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "countryCode": {
                    "description": "Code specifying a country. Allowed code values are specified in GS1 Code List CountryCode.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "countryName": {
                    "description": "The word or term by which the country is referenced in general communication.",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "currencyOfPartyCode": {
                    "description": "Code specifying a currency. Allowed code values are specified in GS1 Code List CurrencyCode.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "geographicalCoordinates": {
                    "$ref": "#/definitions/LocationGeographicalCoordinatesType"
                },
                "languageOfThePartyCode": {
                    "description": "Code specifying a language. Allowed code values are specified in GS1 Code List LanguageCode.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The name of the party expressed in text.",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pOBoxNumber": {
                    "description": "The number that identifies a PO box. A PO box is a box in a post office or other postal service location assigned to an organization where postal items may be kept.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "postalCode": {
                    "description": "Text specifying the postal code for an address.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "regionName": {
                    "description": "The description of broad category of geographical areas or region associated to this location, e.g. North, South.",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "state": {
                    "description": "One of the constituent units of a nation having a federal government.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "streetAddressOne": {
                    "description": "The first free form line of an address. This first part is printed on paper as the first line below the name. For example, the name of the street and the number in the street or the name of a building.",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "streetAddressThree": {
                    "description": "The third free form line of an address. This third part is printed on paper as the third line below the name. The third free form line complements the first and second free form lines where necessary.",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "streetAddressTwo": {
                    "description": "The second free form line of an address. This second part is printed on paper as the second line below the name. The second free form line complements the first free form line to locate the party e.g. floor number, name of a building, suite number or",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationConsignmentItemOverrideType": {
            "additionalProperties": false,
            "properties": {
                "itemId": {
                    "description": "The unique identification of this item.",
                    "type": "string"
                },
                "locationId": {
                    "description": "The location in which the work order was performed.",
                    "type": "string"
                },
                "ownerOfTradeItem": {
                    "description": "The party that owns this item.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "itemId",
                "locationId"
            ],
            "type": "object"
        },
        "LocationContactType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "communicationChannel": {
                    "description": "The channel or manner in which a communication can be made, such as telephone or email.",
                    "items": {
                        "$ref": "#/definitions/CommunicationChannelType"
                    },
                    "type": "array"
                },
                "companyName": {
                    "description": "The name of the company of this contact.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "contactTypeCode": {
                    "description": "Code specifying the function or role of a contact.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "departmentName": {
                    "description": "The name of the department that can be contacted to provide additional information",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "honorific": {
                    "description": "The honorific for the customer, for example, Mr., Ms., Mrs., Dr. etc.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "isPrimaryContact": {
                    "description": "Flag to indicate if a contact is the primary contact.",
                    "type": "boolean"
                },
                "jobTitle": {
                    "description": "The job title of the person that can be contacted.",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "personFirstName": {
                    "description": "An individual's first name.",
                    "maxLength": 30,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "personLastName": {
                    "description": "An individual's last name.",
                    "maxLength": 30,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "personName": {
                    "description": "The name of the individual that can be contacted to provide additional information",
                    "maxLength": 70,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationCustomerCategoryAssetInformationType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "assetType": {
                    "description": "A term used by the business to identify a specific category of logistics asset.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pickingUnitOfMeasure": {
                    "description": "The unit of measure designated to be used by this category of asset.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationFulfillmentDetailsType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "futureProcessingTime": {
                    "$ref": "#/definitions/ProcessingTimeType"
                },
                "inboundProcessingTime": {
                    "$ref": "#/definitions/ProcessingTimeType"
                },
                "isFulfillmentCapacityTracked": {
                    "description": "This is an indicator that specifies whether available fulfillment capacity should be tracked for this location.",
                    "type": "boolean"
                },
                "isTransferEnabled": {
                    "description": "This is an indicator that specifies whether fulfillment activity from this location can be transferred to another location.",
                    "type": "boolean"
                },
                "locationProcessingTime": {
                    "$ref": "#/definitions/ProcessingTimeType"
                },
                "outboundProcessingTime": {
                    "$ref": "#/definitions/ProcessingTimeType"
                },
                "priority": {
                    "description": "This indicates the relative priority of this location compared to other locations for fulfillment purposes.",
                    "type": "integer"
                },
                "stockoutDays": {
                    "description": "The duration of the first stockout, where a stockout is defined as the planned projected onhand (SKUProjection:planProjectedOnHand) going below zero, beginning from the date/time when the SKUs planned projected on hand first becomes negative until it becomes non-negative again.",
                    "type": "integer"
                },
                "trackingLevel": {
                    "description": "This determines at what level fulfillment inventory in this location should be tracked for inventory availability purposes, for example EPC, SKU etc.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationGeographicalCoordinatesType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "altitude": {
                    "$ref": "#/definitions/QuantityType"
                },
                "latitude": {
                    "description": "Measurement on a globe or map of location north or south of the Equator.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "longitude": {
                    "description": "Measurement of location east or west of the prime meridian at Greenwich.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationItemDetailsType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "handlingAssetType": {
                    "description": "Handling Unit Type. Grouping of assets based on traits like dimensions,weight,manufacture etc.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "isDefaultLogisticUnitConfiguration": {
                    "description": "An indicator that defines the default logistic unit information configuration for this item.",
                    "type": "boolean"
                },
                "isLPNAttribute1Required": {
                    "description": "An indicator that specifies whether the designated first user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute2Required": {
                    "description": "An indicator that specifies whether the designated second user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute3Required": {
                    "description": "An indicator that specifies whether the designated third user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute4Required": {
                    "description": "An indicator that specifies whether the designated fourth user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute5Required": {
                    "description": "An indicator that specifies whether the designated fifth user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "logisticUnitConfigurationName": {
                    "description": "The name that identifies this logistic unit configuration.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationItemInformationType": {
            "additionalProperties": false,
            "properties": {
                "handlingAssetType": {
                    "description": "Handling Unit Type. Grouping of assets based on traits like dimensions, weight, manufacture, etc.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "inventoryStatusType": {
                    "description": "The specified end state of the inventory upon completion of the requested activity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "isLPNAttribute1Required": {
                    "description": "An indicator that specifies whether the designated first user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute2Required": {
                    "description": "An indicator that specifies whether the designated second user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute3Required": {
                    "description": "An indicator that specifies whether the designated third user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute4Required": {
                    "description": "An indicator that specifies whether the designated fourth user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute5Required": {
                    "description": "An indicator that specifies whether the designated fifth user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "itemId": {
                    "description": "The unique identification of this item.",
                    "type": "string"
                },
                "locationItemDetails": {
                    "description": "Information about operational considerations for the item.",
                    "items": {
                        "$ref": "#/definitions/LocationItemDetailsType"
                    },
                    "type": "array"
                },
                "lotFormatId": {
                    "description": "The set of characters used to specify the method for the parsing of lot numbers.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "ownerOfTradeItem": {
                    "description": "The party that owns this item.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "reorderPoint": {
                    "$ref": "#/definitions/QuantityType"
                },
                "reorderQuantity": {
                    "$ref": "#/definitions/QuantityType"
                },
                "serialNumberType": {
                    "description": "The type of serial number.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "itemId"
            ],
            "type": "object"
        },
        "LocationLoadingTimeInformationType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "fixedStopTimeDuration": {
                    "description": "The amount of time in minutes to be added to a stop duration for loading and unloading.",
                    "type": "number"
                },
                "hasHandlingTimeItemLoading": {
                    "description": "An indicator that determines whether variable definitions are defined in the variableLoadingTime or variableUnloadingTime collections.",
                    "type": "boolean"
                },
                "itemType": {
                    "description": "A term used to categorize similar items.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "loadingDivideByFactor": {
                    "description": "A factor by which the units are divided, before multiplying by the variableTimeSpan.",
                    "type": "number"
                },
                "loadingType": {
                    "description": "The loading type for the loading time information.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "loadingVariableCode": {
                    "$ref": "#/definitions/LocationVariableCodeEnumerationType"
                },
                "loadingVariableTimeDuration": {
                    "description": "The amount of time in minutes to be added for each variable time unit.",
                    "type": "number"
                },
                "unloadingDivideByFactor": {
                    "description": "A factor by which the units are divided, before multiplying by the variableTimeSpan.",
                    "type": "number"
                },
                "unloadingVariableCode": {
                    "$ref": "#/definitions/LocationVariableCodeEnumerationType"
                },
                "unloadingVariableTimeDuration": {
                    "description": "The amount of time in minutes to be added for each variable time unit.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "LocationManufacturingModelInformationType": {
            "additionalProperties": false,
            "properties": {
                "freezeWindowDuration": {
                    "$ref": "#/definitions/TimeMeasurementType"
                },
                "modelId": {
                    "description": "The name of the model.",
                    "type": "string"
                }
            },
            "required": [
                "modelId"
            ],
            "type": "object"
        },
        "LocationMeasuresType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "measure": {
                    "description": "Time-phased capacities/constraints/measures associated with this location.",
                    "items": {
                        "$ref": "#/definitions/LocationMeasureType"
                    },
                    "type": "array"
                },
                "storageUnitOfMeasure": {
                    "description": "The designated unit of measure by which goods are stored for capacity measures.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "LocationMeasureType": {
            "additionalProperties": false,
            "properties": {
                "effectiveFromDateTime": {
                    "description": "Defines the time on the day from which, this measure begins.",
                    "format": "date-time",
                    "type": "string"
                },
                "effectiveUpToDateTime": {
                    "description": "Defines the time on a day up to which, this measure is valid.",
                    "format": "date-time",
                    "type": "string"
                },
                "measureType": {
                    "description": "Name of the constraint/capacity/measure.",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity of this measure.",
                    "type": "number"
                }
            },
            "required": [
                "measureType",
                "quantity"
            ],
            "type": "object"
        },
        "LocationStatusType": {
            "additionalProperties": false,
            "dependencies": {
                "avpList": {
                    "not": {
                        "required": [
                            "extensions"
                        ]
                    }
                },
                "extensions": {
                    "not": {
                        "required": [
                            "avpList"
                        ]
                    }
                }
            },
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "avpList": {
                    "description": "Deprecated, use 'extensions' instead. The placeholder for non-standard data.",
                    "items": {
                        "$ref": "#/definitions/EcomStringAttributeValuePairListType"
                    },
                    "type": "array"
                },
                "effectiveFromDate": {
                    "description": "Date (inclusive of the day itself) that this location status begins.",
                    "format": "date",
                    "type": "string"
                },
                "effectiveTime": {
                    "description": "Date (inclusive of the day itself) that this location status begins.",
                    "type": "string"
                },
                "effectiveUpToDate": {
                    "description": "The date up to which (exclusive of that day), location status is effective.",
                    "format": "date",
                    "type": "string"
                },
                "extensions": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "statusCode": {
                    "description": "Indicates if a location is active/inactive.",
                    "type": "string"
                }
            },
            "required": [
                "statusCode"
            ],
            "type": "object"
        },
        "LocationTransportEquipmentRestrictionCodeEnumerationType": {
            "enum": [
                "IER_NULL",
                "IER_EXCLUDE",
                "IER_INCLUDE"
            ],
            "type": "string"
        },
        "LocationTransportEquipmentRestrictionType": {
            "additionalProperties": false,
            "properties": {
                "restrictionCode": {
                    "$ref": "#/definitions/LocationTransportEquipmentRestrictionCodeEnumerationType"
                },
                "transportEquipmentTypeCode": {
                    "description": "Code to identify equipment type used in transporting a load.",
                    "maxLength": 80,
                    "type": "string"
                }
            },
            "required": [
                "transportEquipmentTypeCode",
                "restrictionCode"
            ],
            "type": "object"
        },
        "LocationType": {
            "additionalProperties": false,
            "dependencies": {
                "avpList": {
                    "not": {
                        "required": [
                            "extensions"
                        ]
                    }
                },
                "extensions": {
                    "not": {
                        "required": [
                            "avpList"
                        ]
                    }
                }
            },
            "properties": {
                "accessGroup": {
                    "description": "Optional field that can be filled for access control use cases (within the LDE UI). Content of this field will be ignored by the LDE machine learning model.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "avpList": {
                    "description": "Deprecated, use 'extensions' instead. The placeholder for non-standard data.",
                    "items": {
                        "$ref": "#/definitions/EcomStringAttributeValuePairListType"
                    },
                    "type": "array"
                },
                "basicLocation": {
                    "$ref": "#/definitions/BasicLocationType"
                },
                "businessUnitId": {
                    "description": "A set of characters that uniquely references a financial segment of the business operations.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "captainLocationId": {
                    "description": "This denotes the captain vendor (locationId), for the order grouping purpose. Used for Order Optimization.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "creationDateTime": {
                    "description": "Date and time when the document was created.",
                    "format": "date-time",
                    "type": "string"
                },
                "despatchAdviceRestrictionCode": {
                    "description": "Determines how much despatch advice information should be sent to this client location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "distributionCenterDetails": {
                    "description": "Detailed information needed for an individual warehouse that replenishes goods for the store.",
                    "items": {
                        "$ref": "#/definitions/DistributionCenterDetailsType"
                    },
                    "type": "array"
                },
                "documentActionCode": {
                    "$ref": "#/definitions/DocumentActionEnumerationType"
                },
                "documentStatusCode": {
                    "$ref": "#/definitions/DocumentStatusEnumerationType"
                },
                "entityId": {
                    "description": "An internally used identifier used for document tracking.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "extensions": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "externalEntityId": {
                    "description": "This field captures the unique identifier provided by the customer, linking the ingested data to the customer’s original data/entity ID. It ensures traceability and accurate association between the customer’s data and the ingested records.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "fulfillmentDetails": {
                    "$ref": "#/definitions/LocationFulfillmentDetailsType"
                },
                "isCaptainLocation": {
                    "description": "An indicator that defines whether location is a captain vendor, e.g. value C denotes that record is Captain Vendor. Used for Order Optimization.",
                    "maxLength": 1,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "isValidForExec": {
                    "description": "Indicates whether this entity data is valid for the cognitive execution considerations. This flag is set by the validation services of the cognitive execution and should not be sent by host system or user.",
                    "type": "boolean"
                },
                "isValidForTransportPlanning": {
                    "description": "Indicates whether this entity data is valid for the transportation planning considerations. This flag is set by the validation services of the Transportation Planning application and should not be sent by host system or user.",
                    "type": "boolean"
                },
                "lastUpdateDateTime": {
                    "description": "Date and time when the document was last updated.",
                    "format": "date-time",
                    "type": "string"
                },
                "locationHierarchyInformation": {
                    "$ref": "#/definitions/HierarchyInformationType"
                },
                "locationId": {
                    "description": "The unique identifier of the piece of information, such as the object identifier or the document identifier.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                },
                "locationPriorityAttribute": {
                    "description": "This describes the importance of demand associated with this location, in Demand Prioritization Framework.",
                    "maxLength": 100,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "logisticDetails": {
                    "$ref": "#/definitions/LogisticDetailsType"
                },
                "manufacturingModelInformation": {
                    "description": "Location specific parameters for manufacturing model.",
                    "items": {
                        "$ref": "#/definitions/LocationManufacturingModelInformationType"
                    },
                    "type": "array"
                },
                "measures": {
                    "$ref": "#/definitions/LocationMeasuresType"
                },
                "parentLocationId": {
                    "description": "This field identifies the parent facility for one or more physical Location, e.g. In LoadBuildSource (LBS) application parentLocationId and (child)locationId combination is used to create multi stop load, were same parent locations STR’s can be grouped into a single load.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "parentParty": {
                    "$ref": "#/definitions/ParentPartyType"
                },
                "planningDetails": {
                    "$ref": "#/definitions/PlanningDetailsType"
                },
                "requiresTransportPlanning": {
                    "description": "Used to determine if this order should be sent to the TM system to be planned",
                    "type": "boolean"
                },
                "retailDetails": {
                    "$ref": "#/definitions/RetailDetailsType"
                },
                "senderDocumentId": {
                    "description": "The identification of the original document that was sent.  Examples could be an SAP IDOC number.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "senderSystem": {
                    "description": "The system that sent this data.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "throughputGroupName": {
                    "description": "Throughput group associated with this location. Throughput constraints define the amount of handling that a location can do in a specific amount of time.",
                    "maxLength": 80,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "trackDeliveryCapacity": {
                    "description": "Indicates if the delivery capacity will be tracked. This  is exclusively for considering  labour capacity that will be required for store pickup orders.",
                    "type": "boolean"
                }
            },
            "required": [
                "locationId"
            ],
            "type": "object"
        },
        "LocationVariableCodeEnumerationType": {
            "enum": [
                "PIECES",
                "VOLUME",
                "PALLETS",
                "WEIGHT",
                "UNITS",
                "QTY_LOADING_FACTOR",
                "FLEXQUANTITY1",
                "FLEXQUANTITY2",
                "FLEXQUANTITY3",
                "FLEXQUANTITY4",
                "FLEXQUANTITY5",
                "INVALID_DIM"
            ],
            "type": "string"
        },
        "LogisticDetailsType": {
            "additionalProperties": false,
            "dependencies": {
                "avpList": {
                    "not": {
                        "required": [
                            "extensions"
                        ]
                    }
                },
                "extensions": {
                    "not": {
                        "required": [
                            "avpList"
                        ]
                    }
                }
            },
            "nullable": true,
            "properties": {
                "absoluteInventoryRotationWindow": {
                    "$ref": "#/definitions/TimeMeasurementType"
                },
                "allocationSearchPathId": {
                    "description": "The set of characters that uniquely references a method for determining the proper inventory to use for fulfilling orders to customers of this cateogry.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "allowBreaksWhileLoading": {
                    "description": "An indicator that determines whether breaks are allowed while loading at locations of this type.",
                    "type": "boolean"
                },
                "allowDropOffCode": {
                    "$ref": "#/definitions/AllowDropOffEnumerationType"
                },
                "allowLoadToBecomeEmpty": {
                    "description": "An indicator that determines whether a load can become empty at this location, even if this location is an intermediate stop.",
                    "type": "boolean"
                },
                "allowPickUpCode": {
                    "$ref": "#/definitions/AllowPickUpEnumerationType"
                },
                "assetInformation": {
                    "description": "Contains information on the movement of the goods.",
                    "items": {
                        "$ref": "#/definitions/LocationCustomerCategoryAssetInformationType"
                    },
                    "type": "array"
                },
                "assumeTrailerSwap": {
                    "description": "An indicator that determines whether a trailer swap should be used (incurring 2x fixed time) or whether the vehicle should be unloaded and loaded live.",
                    "type": "boolean"
                },
                "automaticallyReceiveASN": {
                    "description": "An indicator that defines whether Advance Ship Notices from this supplier are approved for receiving operations.",
                    "type": "boolean"
                },
                "avpList": {
                    "description": "Deprecated, use 'extensions' instead. The placeholder for non-standard data.",
                    "items": {
                        "$ref": "#/definitions/EcomStringAttributeValuePairListType"
                    },
                    "type": "array"
                },
                "carrier": {
                    "$ref": "#/definitions/PartyIdentificationType"
                },
                "carrierDetails": {
                    "description": "Information about carriers for this supplier location.",
                    "items": {
                        "$ref": "#/definitions/ShippingCarrierDetailsType"
                    },
                    "type": "array"
                },
                "carrierGroup": {
                    "description": "The term by which the business refers to a collection of carriers to which the carrier for the movement belongs.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "consignmentTrackingCode": {
                    "description": "A term used by the business to identify the supplier required tracking services for items for which it retains ownership until a predetermined future point in time, such as when shipped.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "customerCategoryId": {
                    "description": "The set of characters that uniquely references the Customer Category.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "departmentId": {
                    "description": "The series of characters that uniquely identifies the business category of record for customers assigned to this category.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "destinationSplitConstraint": {
                    "$ref": "#/definitions/SplitConstraintType"
                },
                "distanceOverrideCode": {
                    "description": "Indicates whether to convert or delete the distance override when updating the shipping location's address.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "earliestPostDischargeStartTimeDur": {
                    "description": "Specifies the earliest time after carrier departure that post-discharge handling can start. Post-discharge handling is required for non-live stops at this dock if latestPostDischargeStartTimeSpan is specified and greater than 0.",
                    "type": "number"
                },
                "earliestPreLoadingEndTimeDur": {
                    "description": "Specifies the earliest time before carrier arrival that pre-loading handling can end. Pre-loading handling is required for non-live stops at this dock if this value is specified and greater than 0.",
                    "type": "number"
                },
                "earlyDeliveryTolerance": {
                    "$ref": "#/definitions/TimeMeasurementType"
                },
                "extensions": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "fixedLoadingDurationInHours": {
                    "description": "The fixed loading time (in hours) at the shipping location.",
                    "type": "number"
                },
                "inboundLoadingCode": {
                    "$ref": "#/definitions/LoadingCodeType"
                },
                "inventorySelectionMethod": {
                    "description": "Method of selecting product to meet order requirements.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "inventoryStatusProgression": {
                    "description": "A term that represents a list of inventory statuses.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "inventoryStatusType": {
                    "description": "The specified end state of the inventory upon completion of the requested activity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "isCarrierChangable": {
                    "description": "Flag to indicate if Carrier can be changed.",
                    "type": "boolean"
                },
                "isCrossdockAllowed": {
                    "description": "An indicator that specifies whether outbound operations is allowed to fulfill this order line using items as they are received.",
                    "type": "boolean"
                },
                "isFirstStopOnly": {
                    "description": "An indicator that determines whether this location can only be routed as the first stop on a load or trip.",
                    "type": "boolean"
                },
                "isFreshnessProcessingRequired": {
                    "description": "An indicator that specifies whether the items for this customer category require evaluation to ensure they meet freshness requirements.",
                    "type": "boolean"
                },
                "isLastStopOnly": {
                    "description": "An indicator that determines whether this location can only be routed as the last stop on a load or trip.",
                    "type": "boolean"
                },
                "isLPNAttribute1Required": {
                    "description": "An indicator that specifies whether the designated first user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute2Required": {
                    "description": "An indicator that specifies whether the designated second user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute3Required": {
                    "description": "An indicator that specifies whether the designated third user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute4Required": {
                    "description": "An indicator that specifies whether the designated fourth user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isLPNAttribute5Required": {
                    "description": "An indicator that specifies whether the designated fifth user-defined LPN attribute is required.",
                    "type": "boolean"
                },
                "isOriginRule": {
                    "description": "An indicator that determines whether the rule applies to shipments that originate at the location.",
                    "type": "boolean"
                },
                "isPartialAllocationAllowed": {
                    "description": "Partial Allocation Flag.",
                    "type": "boolean"
                },
                "isPartialShipmentAllowed": {
                    "description": "Back Order Flag.",
                    "type": "boolean"
                },
                "isPercentageRule": {
                    "description": "An indicator that determines whether the rule is percentage based.",
                    "type": "boolean"
                },
                "isShipmentConsolidationAllowed": {
                    "description": "An indicator that determines whether consolidation can occur on inbond loads at this location.",
                    "type": "boolean"
                },
                "isShipmentDeconsolidationAllowed": {
                    "description": "Indicates if the Hub can be used as a location to deconsolidate shipments.",
                    "type": "boolean"
                },
                "isSplitCaseAllowed": {
                    "description": "Split Case Flag.",
                    "type": "boolean"
                },
                "isStandardCaseRequired": {
                    "description": "Determines whether or not the system can allocate non-standard (different from the standard footprint) case quantities.",
                    "type": "boolean"
                },
                "isTransferHub": {
                    "description": "An indicator that determines whether this location is a transfer hub.",
                    "type": "boolean"
                },
                "isTransportationPlanningRequired": {
                    "description": "An indicator that specifies whether orders for this customer require shipment planning in a transporation management system.",
                    "type": "boolean"
                },
                "lateDeliveryTolerance": {
                    "$ref": "#/definitions/TimeMeasurementType"
                },
                "latestPostDischargeStartTimeDur": {
                    "description": "Specifies the latest time after carrier departure that post-discharge handling can start. Post-discharge handling is required for non-live stops at this dock if this value is specified and greater than 0.",
                    "type": "number"
                },
                "latestPreLoadingEndTimeDur": {
                    "description": "Specifies the latest time before carrier arrival that pre-loading handling can end. Pre-loading handling is required for non-live stops at this dock if earliestPreLoadingEndTimeSpan is specified and greater than 0.",
                    "type": "number"
                },
                "loadingTimeInformation": {
                    "description": "An indicator that determines whether this location can only be routed as the last stop on a load or trip.",
                    "items": {
                        "$ref": "#/definitions/LocationLoadingTimeInformationType"
                    },
                    "type": "array"
                },
                "loadingUnloadingTimeCalculationCode": {
                    "$ref": "#/definitions/LoadingUnloadingTimeCalculationCodeType"
                },
                "locationConsignmentItemOverride": {
                    "description": "Information about consignment items for this supplier location.",
                    "items": {
                        "$ref": "#/definitions/LocationConsignmentItemOverrideType"
                    },
                    "type": "array"
                },
                "locationItemInformation": {
                    "description": "Contains information relevant to the operational needs of items for this location",
                    "items": {
                        "$ref": "#/definitions/LocationItemInformationType"
                    },
                    "type": "array"
                },
                "lotFormatId": {
                    "description": "The set of characters used to specify the method for the parsing of lot numbers.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "manufacturerOfTradeItem": {
                    "$ref": "#/definitions/PartyIdentificationType"
                },
                "maxCube": {
                    "description": "The maximum cubic volume allowed at this location.",
                    "type": "number"
                },
                "maxDestinationSplits": {
                    "description": "The maximum number of times a shipment can be split when it terminates at this location.",
                    "type": "integer"
                },
                "maxHandlingTimeDur": {
                    "description": "The maximum time in minutes it will take at this location to handle goods.",
                    "type": "number"
                },
                "maximumShipmentVolume": {
                    "$ref": "#/definitions/MeasurementType"
                },
                "maximumShipmentWeight": {
                    "$ref": "#/definitions/MeasurementType"
                },
                "maximumVariableLoadingDurationInHours": {
                    "description": "The maximum variable loading time (in hours) at the shipping location.",
                    "type": "number"
                },
                "maxInboundLoads": {
                    "description": "The maximum number of inbound loads this location can handle during a calendar day.",
                    "type": "integer"
                },
                "maxLoadWeight": {
                    "description": "The maximum weight for loads that stop at this location.",
                    "type": "number"
                },
                "maxOriginSplits": {
                    "description": "The maximum number of times a shipment can be split when it originates at this location.",
                    "type": "integer"
                },
                "maxOutboundLoads": {
                    "description": "The maximum number of outbound loads this location can handle during a calendar day.",
                    "type": "integer"
                },
                "maxPallets": {
                    "description": "The maximum number of pallets this location can handle during a calendar day.",
                    "type": "integer"
                },
                "maxPenalty": {
                    "description": "The penalty to be applied if the maximum constraint for this location is exceeded.",
                    "type": "number"
                },
                "maxPickAndDrop": {
                    "description": "The maximum physical and monetary dimensions that can be picked up and dropped off at this location.",
                    "type": "number"
                },
                "maxPieces": {
                    "description": "The maximum number of pieces this location can handle during a calendar day.",
                    "type": "integer"
                },
                "maxShipmentHoldTimeDur": {
                    "description": "The maximum time in minutes a shipment can remain at this location.",
                    "type": "number"
                },
                "maxTotalTrailerLength": {
                    "description": "The maximum total trailer length which is allowed to arrive or depart from the location.",
                    "type": "number"
                },
                "maxTrailersPerDrop": {
                    "description": "The maximum number of trailers that can be handled at the location. More trailers may arrive at the location, based upon MaxTrailersPerLoad, but only shipments from this number of trailers may unload at the location.",
                    "type": "integer"
                },
                "maxTrailersPerLoad": {
                    "description": "The maximum number of trailers which can leave or arrive at the location on a load.",
                    "type": "integer"
                },
                "minCrossdockDur": {
                    "description": "The minimum time in minutes for processing a shipment through this location.",
                    "type": "number"
                },
                "minCube": {
                    "description": "The minumum cubic volume allowed at this location.",
                    "type": "number"
                },
                "minDestinationShipmentWindowDur": {
                    "description": "The minimum delivery window a shipment can have to be split when it terminates at this location.",
                    "type": "number"
                },
                "minHandlingTimeDur": {
                    "description": "The minimum time in minutes it will take at this location to handle goods.",
                    "type": "number"
                },
                "minimumShelfHours": {
                    "description": "The minimum amount of time, in hours, that an item must have available before expiration in order to be eligible for being sent to a customer of this category.",
                    "type": "integer"
                },
                "minimumVariableLoadingDurationInHours": {
                    "description": "The minimum variable loading time (in hours) at the shipping location.",
                    "type": "number"
                },
                "minInboundLoads": {
                    "description": "The minimum number of inbound loads this location can handle during a calendar day.",
                    "type": "integer"
                },
                "minLeadTimeDur": {
                    "description": "The minimum time in minutes that must be given as notification of an inbound load to this location.",
                    "type": "number"
                },
                "minOriginShipmentWindowDur": {
                    "description": "The minimum pick window a shipment can have to be split when it originates at this location.",
                    "type": "number"
                },
                "minOutboundLoads": {
                    "description": "The minimum number of outbound loads this location can handle during a calendar day.",
                    "type": "integer"
                },
                "minPallets": {
                    "description": "The minimum number of pallets this location can handle during a calendar day.",
                    "type": "integer"
                },
                "minPenalty": {
                    "description": "The penalty to be applied if the minimum constraint for this location is exceeded.",
                    "type": "number"
                },
                "minPieces": {
                    "description": "The minimum number of pieces this location can handle during a calendar day.",
                    "type": "integer"
                },
                "minSplitUom": {
                    "$ref": "#/definitions/ShipmentUomType"
                },
                "minSplitValue": {
                    "description": "The minimum value the shipment dimension must have for the shipment to be spilt.",
                    "type": "number"
                },
                "minStopWeight": {
                    "description": "The minimum weight for a drop or a pick at this location.",
                    "type": "number"
                },
                "minWeight": {
                    "description": "The minimum weight requirement for this location.",
                    "type": "number"
                },
                "numberParkingSlots": {
                    "description": "The number of parking slots at this location.",
                    "type": "integer"
                },
                "originSplitConstraint": {
                    "$ref": "#/definitions/SplitConstraintType"
                },
                "outboundLoadingCode": {
                    "$ref": "#/definitions/LoadingCodeType"
                },
                "palletBuildingConsolidationRule": {
                    "description": "The term by which a consolidation order for placing items onto a pallet is known by the business.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "parcelBillingId": {
                    "description": "Deprecated as of 2021.10.0.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repackClass": {
                    "description": "A term or value that refers to a unique packaging option. This is used to then match items requiring the option with packaging methods that provide it.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "requiredService": {
                    "description": "The required service at this location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "reservationPriority": {
                    "description": "This element is used to determine which orders receive inventory when there is not enough inventory in the warehouse to satisfy all orders for an item number. This option applies only when the order reservation process is used.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "serialNumberType": {
                    "description": "The type of serial number.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "shipmentCreationRule": {
                    "description": "The term by which the business understands the set of rules to follow when creating shipments for customers assigned to this Customer Category.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "shipmentLabelId": {
                    "description": "The set of characters that uniquely references a template or example of the format to be used when creating labels for the shipping of goods for members of this Customer Category.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "storageAreaSize": {
                    "$ref": "#/definitions/QuantityType"
                },
                "trailerDoor": {
                    "$ref": "#/definitions/TrailerDoorType"
                },
                "transportEquipmentRestriction": {
                    "description": "Details regarding the transport equipment restrictions applicable for this location.",
                    "items": {
                        "$ref": "#/definitions/LocationTransportEquipmentRestrictionType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MeasurementType": {
            "additionalProperties": false,
            "properties": {
                "measurementUnitCode": {
                    "description": "Any standardized, reproducible unit that can be used to measure any physical property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "Provides measurement value and an associated unit of measure code.",
                    "type": "number"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "MeasurementUnitCode": {
            "type": "string"
        },
        "OperatingHours": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "daylightSavingsOffset": {
                    "description": "The number of hours offset from the default business hours due to daylight savings time. Usually calculated based on the address of the object the business hours are attached to.",
                    "type": "number"
                },
                "regularOperatingHours": {
                    "description": "The period during which a business or facility is operational on a weekday. \n",
                    "items": {
                        "$ref": "#/definitions/OperatingHoursType"
                    },
                    "type": "array"
                },
                "specialOperatingHours": {
                    "description": "The period during which a business or facility is operational on special days, such as holidays. \n",
                    "items": {
                        "$ref": "#/definitions/SpecialOperatingHoursType"
                    },
                    "type": "array"
                },
                "timeZoneCode": {
                    "description": "A set of characters defined by the Unicode Common Locale Data Repository (CLDR) project that uniquely identifies the time zone (a region of the globe that observes a uniform standard time for legal, commercial and social purposes). E.g. \"America/New_York\".",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "utcOffset": {
                    "description": "Numeric value specifying the time zone of the location as offset from the Coordinated Universal Time.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "OperatingHoursType": {
            "additionalProperties": false,
            "properties": {
                "closingTime": {
                    "description": "Time at which the business or facility closes on the specified day.",
                    "type": "string"
                },
                "dayOfTheWeekCode": {
                    "$ref": "#/definitions/DayOfTheWeekEnumerationType"
                },
                "isOperational": {
                    "description": "Indicator specifying whether or not the business or facility is operational on the specified day.\n",
                    "type": "boolean"
                },
                "openingTime": {
                    "description": "Time at which the business or facility opens on the specified day.",
                    "type": "string"
                }
            },
            "required": [
                "dayOfTheWeekCode",
                "isOperational"
            ],
            "type": "object"
        },
        "PackageTypeCode": {
            "type": "string"
        },
        "ParentPartyType": {
            "additionalProperties": false,
            "properties": {
                "additionalPartyId": {
                    "description": "Identifier of the party or location, specified in addition to the GLN.",
                    "items": {
                        "$ref": "#/definitions/AdditionalPartyIdentificationType"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the party or location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "parentRole": {
                    "description": "The role of the parent party from the point of view of the Enterprise - Supplier Or Customer.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "primaryId": {
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "primaryId"
            ],
            "type": "object"
        },
        "PartyIdentificationType": {
            "additionalProperties": false,
            "properties": {
                "additionalPartyId": {
                    "description": "Identifier of the party or location, specified in addition to the GLN.",
                    "items": {
                        "$ref": "#/definitions/AdditionalPartyIdentificationType"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the party or location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "primaryId": {
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "primaryId"
            ],
            "type": "object"
        },
        "PartyRoleCode": {
            "type": "string"
        },
        "PlanningDetailsType": {
            "additionalProperties": false,
            "dependencies": {
                "avpList": {
                    "not": {
                        "required": [
                            "extensions"
                        ]
                    }
                },
                "extensions": {
                    "not": {
                        "required": [
                            "avpList"
                        ]
                    }
                }
            },
            "nullable": true,
            "properties": {
                "arrivalCalendarId": {
                    "description": "The defined working periods that govern arrivals at this location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "avpList": {
                    "description": "Deprecated, use 'extensions' instead. The placeholder for non-standard data.",
                    "items": {
                        "$ref": "#/definitions/EcomStringAttributeValuePairListType"
                    },
                    "type": "array"
                },
                "beginFreezeDate": {
                    "description": "\"The beginning date of the freeze period. Valid values include any value less than or equal to Loc:OHPost.ESP(DT) and FulfillmentMaster Planning, Fulfillment/Production, and Fulfillment/Distribution use this value as the beginning date for the freeze period whose duration is specified in SKUPlanningParam:MfgFrzDur or SKUPlanningParam:DRPFrzDur. If FrzStart is blank, the system uses the value in Loc:OHPost instead. If that is also blank, the system uses SKU:OHPost if it has a value. If not, it uses the current system date.For ESP(DT), the freeze period starts at the planning period start date.\"",
                    "format": "date-time",
                    "pattern": "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(.\\d\\d?\\d?)?(([+-]\\d{2}:\\d{2})|Z)",
                    "type": "string"
                },
                "borrowingPercentage": {
                    "description": "Represents the rate that would be paid if money were borrowed to purchase additional inventory.  90 percent should be put as 90.",
                    "type": "number"
                },
                "calendarId": {
                    "description": "Working Calendar Identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "extensions": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "isArrivalCalendarEnabled": {
                    "description": "An indicator that identifies whether the calendar used for arrival operations is approved to be referenced.",
                    "type": "boolean"
                },
                "isCalendarEnabled": {
                    "description": "An indicator that identifies whether the working calendar is approved to be referenced.",
                    "type": "boolean"
                },
                "isInventoryProjectionRequired": {
                    "description": "Determines whether inventory projection calculations should be performed for this location.",
                    "type": "boolean"
                },
                "isShippingCalendarEnabled": {
                    "description": "An indicator that identifies whether the calendar used for shipping operations is approved to be referenced.",
                    "type": "boolean"
                },
                "lastOnHandPostDate": {
                    "description": "The last time current on hand was posted for this location.",
                    "format": "date-time",
                    "pattern": "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(.\\d\\d?\\d?)?(([+-]\\d{2}:\\d{2})|Z)",
                    "type": "string"
                },
                "shippingCalendarId": {
                    "description": "The defined working periods that govern shipping activity at this location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "weatherArea": {
                    "description": "A unique identifier of an area which is impacted by weather.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "ProcessingTimeType": {
            "additionalProperties": false,
            "properties": {
                "maximumDurationInMinutes": {
                    "description": "This is the maximum time that takes to process fulfillment at this location.",
                    "type": "integer"
                },
                "minimumDurationInMinutes": {
                    "description": "This is the minimum time that takes to process fulfillment at this location.",
                    "type": "integer"
                }
            },
            "required": [
                "minimumDurationInMinutes",
                "maximumDurationInMinutes"
            ],
            "type": "object"
        },
        "QuantityType": {
            "additionalProperties": false,
            "properties": {
                "measurementUnitCode": {
                    "description": "Any standardized, reproducible unit that can be used to measure any physical property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "Provides quantity value and an associated unit of measure code.",
                    "type": "number"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "RetailCategoryCode": {
            "type": "string"
        },
        "RetailDetailsType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "annualSalesRevenue": {
                    "description": "The total annual sales revenue amount for this location.",
                    "type": "number"
                },
                "buildingAreaSize": {
                    "$ref": "#/definitions/QuantityType"
                },
                "categoryCode": {
                    "description": "Various category flags for this store, e.g. IS_RURAL, IS_FLAGSHIP.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "competition": {
                    "description": "Information regarding competitive locations.",
                    "items": {
                        "$ref": "#/definitions/CompetitionType"
                    },
                    "type": "array"
                },
                "deliveryStartDate": {
                    "description": "The date when the location started delivering orders to the customer address.",
                    "format": "date",
                    "type": "string"
                },
                "demandChannel": {
                    "description": "Channel for this store e.g. Omni, Traditional.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "demography": {
                    "description": "The core demographic for this store e.g. College, Early, Professional, Established, Professional, Retired.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "driveUpServiceStartDate": {
                    "description": "The date when the location started drive up service for the customers to pick up the online orders.",
                    "format": "date",
                    "type": "string"
                },
                "isAvailableForAllocation": {
                    "description": "Value is set to true to allow allocation of merchandise to this location.",
                    "type": "boolean"
                },
                "parkingCapacity": {
                    "description": "The capacity of the parking space at location.",
                    "type": "number"
                },
                "remodelDate": {
                    "description": "The date when this store was remodelled.",
                    "items": {
                        "format": "date",
                        "type": "string"
                    },
                    "type": "array"
                },
                "salesAreaSize": {
                    "$ref": "#/definitions/QuantityType"
                },
                "storeFormat": {
                    "description": "Store Format e.g. Convenience, Fuel Station, Traditional.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "RouteScheduleType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "beginDay": {
                    "$ref": "#/definitions/DayOfTheWeekEnumerationType"
                },
                "beginTime": {
                    "description": "The hour and minute of the begin day on which the route is scheduled to be dispatched and begin its delivery runs.",
                    "type": "string"
                },
                "endDay": {
                    "$ref": "#/definitions/DayOfTheWeekEnumerationType"
                },
                "endTime": {
                    "description": "The hour and minute of the end day on which the route is scheduled to complete its delivery runs.",
                    "type": "string"
                },
                "routeId": {
                    "description": "The set of characters that uniquely references the transportation movement that is assigned to deliver goods to this store.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "stopNumber": {
                    "description": "The numeric position in the route for this store to be delivered.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SegmentActionEnumerationType": {
            "enum": [
                "ADD",
                "CHANGE",
                "DELETE",
                "NO_ACTION"
            ],
            "type": "string"
        },
        "ShipFromType": {
            "additionalProperties": false,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "additionalPartyId": {
                    "description": "Identifier of the location, specified in addition to the GLN.",
                    "items": {
                        "$ref": "#/definitions/AdditionalPartyIdentificationType"
                    },
                    "type": "array"
                },
                "isDefaultShipFromLocation": {
                    "description": "Is this the default shipping warehouse for this store.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "primaryId": {
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "primaryId"
            ],
            "type": "object"
        },
        "ShipmentUomType": {
            "enum": [
                "WEIGHT",
                "CUBE",
                "PALLETS",
                "PIECES",
                "UNITS"
            ],
            "type": "string"
        },
        "ShippingCarrierDetailsType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "carrierId": {
                    "description": "A set of characters that uniquely references a carrier who is the provider of freight services. The carrier is an entity that provides the required equipment and moves shipments on behalf of the shipper or third party logistics provider.",
                    "maxLength": 16,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "carrierName": {
                    "description": "The word or term by which the carrier is known.",
                    "maxLength": 128,
                    "minLength": 1,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "demurrage": {
                    "description": "Information about the demurrage charges that are levied by the port officials to the carrier.",
                    "items": {
                        "$ref": "#/definitions/DemurrageType"
                    },
                    "type": "array"
                },
                "parcelBillingId": {
                    "description": "The set of characters that uniquely references the party responsible for parcel billing.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "ShipToType": {
            "additionalProperties": false,
            "properties": {
                "actionCode": {
                    "$ref": "#/definitions/SegmentActionEnumerationType"
                },
                "additionalPartyId": {
                    "description": "Identifier of the location, specified in addition to the GLN.",
                    "items": {
                        "$ref": "#/definitions/AdditionalPartyIdentificationType"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the location.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "primaryId": {
                    "maxLength": 80,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "primaryId"
            ],
            "type": "object"
        },
        "SpecialOperatingHoursType": {
            "additionalProperties": false,
            "properties": {
                "closingTime": {
                    "description": "Time on which the business or facility will close on the specified day.\n",
                    "type": "string"
                },
                "isOperational": {
                    "description": "Indicator specifying whether or not the business or facility is operational on the specified day.\n",
                    "type": "boolean"
                },
                "openingTime": {
                    "description": "Time on which the business or facility will open on the specified day.\n",
                    "type": "string"
                },
                "specialDate": {
                    "description": "Date specifying the day to which the special operating hours apply.\n",
                    "format": "date",
                    "type": "string"
                },
                "specialDateName": {
                    "$ref": "#/definitions/Description80Type"
                }
            },
            "required": [
                "isOperational",
                "specialDate"
            ],
            "type": "object"
        },
        "SplitConstraintType": {
            "enum": [
                "UNCONSTRAINED",
                "LOCATION",
                "OPT_LEVEL"
            ],
            "type": "string"
        },
        "StoreStagingLocationType": {
            "additionalProperties": false,
            "nullable": true,
            "properties": {
                "destinationLocation": {
                    "description": "The specific area in the distribution center in which goods for this store will be collected prior to shipping.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "destinationMovementZoneId": {
                    "description": "The set of characters that uniquely refers to a specific floor space in the distribution center at which goods for this store are to be collected.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sortSequence": {
                    "description": "A number corresponding to this store's position in a floor area.",
                    "type": "integer"
                },
                "sourceBuildingId": {
                    "description": "The set of characters that uniquely refers to the building at which the goods to be collected for this store originated.",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "TimeMeasurementType": {
            "additionalProperties": false,
            "properties": {
                "timeMeasurementUnitCode": {
                    "description": "Any standardized, reproducible unit that can be used to measure any physical property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "value": {
                    "description": "Provides time measurement value and an associated unit of measure code.",
                    "type": "number"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "TimeMeasurementUnitCode": {
            "type": "string"
        },
        "TimeZoneNameCode": {
            "type": "string"
        },
        "TrailerDoorType": {
            "enum": [
                "BOTH",
                "SIDE_DOOR",
                "NEAR_TAIL"
            ],
            "type": "string"
        }
    },
    "description": "A message used to define a vendor, plant, distribution center, warehouse, store, or other similar location.  A location can also be used to represent a virtual location, such as an on-line store.",
    "properties": {
        "header": {
            "$ref": "#/definitions/HeaderType"
        },
        "location": {
            "description": "Defines a vendor, plant, distribution center, warehouse, store, or other similar location, can also represent a virtual location.",
            "items": {
                "$ref": "#/definitions/LocationType"
            },
            "type": "array"
        }
    },
    "required": [
        "header",
        "location"
    ],
    "title": "location",
    "type": "object"
}